{"version":3,"sources":["css/MaterialCss.js","constants/Messages.js","constants/RouterRoutes.js","data/RestInteraction.js","store/Store.js","component/user/Login.js","component/todo/AddTodo.js","component/layout/AppBar.js","component/layout/CustomDialog.js","component/todo/EditTodo.js","component/todo/TodoHome.js","component/user/SignUp.js","component/layout/CustomSnackBar.js","component/App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","@global","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","card","minWidth","bullet","transform","title","fontSize","pos","marginBottom","root","flexGrow","menuButton","marginRight","titleAppBar","Object","defineProperty","breakpoints","up","search","position","borderRadius","shape","fade","&:hover","marginLeft","searchIcon","height","pointerEvents","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","&:focus","close","INVALID_USERNAME_PASSWORD","GENERAL_FAILURE","SIGN_UP_USER_NAME_TAKEN","SIGN_UP_INVALID","SIGN_UP_WRONG_PASSWORD","UPDATED_TODO","DELETED_TODO","ADDED_TODO","NO_TODOS_FOUND","LOGIN","SIGNUP","HOME","apiUrl","findAllTodo","globalActions","fetch","method","headers","Authorization","localStorage","getItem","then","response","checkForServerFailure","json","data","setTodos","length","showSnackMessage","login","username","password","props","URLSearchParams","append","ok","forEach","value","name","setItem","history","push","status","catch","err","console","log","useGlobal","useGlobalHook","React","todos","showCustomModal","customModalBody","customModalTitle","showSnackBar","snarkBarMessage","store","setState","setCustomModalBody","setCustomModalTitle","openDialog","closeDialog","closeSnackBar","message","Login","classes","_useGlobal","_useGlobal2","slicedToArray","_useState","useState","_useState2","setUsername","_useState3","_useState4","setPassword","react_default","a","createElement","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","e","target","type","Button","onClick","Grid","container","item","react_router_dom","to","AddTodo","content","setContent","handleAddTodo","todoString","Content-Type","JSON","stringify","contents","addTodo","DialogContent","multiline","DialogActions","SearchAppBar","AppBar","Toolbar","noWrap","Search_default","InputBase","placeholder","input","inputProps","aria-label","searchString","searchTodo","IconButton","aria-controls","aria-haspopup","Add_default","removeItem","window","location","Forward_default","CustomDialog","globalState","Dialog","open","onClose","aria-labelledby","DialogTitle","EditTodoDialog","todo","handleUpdateClick","updateTodo","TodoHome","useEffect","todoCards","map","it","Card","key","CardContent","gutterBottom","moment","Date","createdDate","format","CardActions","disableSpacing","Edit_default","deleteTodo","Delete_default","SignUp","_useState5","_useState6","confirmPassword","setConfirmPassword","Person_default","signUp","CustomSnackbar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","action","Close_default","App","basename","react_router","exact","path","Boolean","hostname","match","ReactDOM","render","component_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.784052a1.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\nimport {fade} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles(theme => ({\n  // Sign-in / Login\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  // Listing\n  card: {\n    minWidth: 275,\n    marginTop: 10,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  // App Bar\n  titleAppBar: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n  // SnackBar\n  close: {\n    padding: theme.spacing(0.5),\n  },\n}));","export const INVALID_USERNAME_PASSWORD = \"Username / Password Incorrect\";\nexport const GENERAL_FAILURE = \"We are experiencing some problems. Please try again later\";\nexport const SIGN_UP_USER_NAME_TAKEN = \"This username has already been taken. Please try another\";\nexport const SIGN_UP_INVALID = \"Username and password must not be blank!\";\nexport const SIGN_UP_WRONG_PASSWORD = \"Password not the same!\";\nexport const UPDATED_TODO = \"Todo successfully updated!\";\nexport const DELETED_TODO = \"Todo successfully deleted!\";\nexport const ADDED_TODO = \"Todo successfully added!\";\nexport const NO_TODOS_FOUND = \"Seems you don't have any todos. Start creating now by click the + button!\";","export const LOGIN = \"/\";\nexport const SIGNUP = \"/signup\";\nexport const HOME = \"/home\";","import {\n  ADDED_TODO,\n  DELETED_TODO,\n  GENERAL_FAILURE,\n  INVALID_USERNAME_PASSWORD, NO_TODOS_FOUND,\n  SIGN_UP_INVALID,\n  SIGN_UP_USER_NAME_TAKEN,\n  SIGN_UP_WRONG_PASSWORD,\n  UPDATED_TODO\n} from \"../constants/Messages\";\nimport {HOME} from \"../constants/RouterRoutes\";\n\nconst apiUrl = process.env.NODE_ENV === 'production' ? 'https://cors-anywhere.herokuapp.com/https://spring-todo-backend-server.herokuapp.com' : 'http://localhost:3000';\n\nexport function findAllTodo(globalActions) {\n  fetch(apiUrl + '/api/v1/todo', {\n    method: 'GET',\n    headers: {\n      'Authorization': localStorage.getItem(\"token\"),\n    }\n  }).then(response => {\n        checkForServerFailure(response, globalActions);\n        return response.json()\n      }\n  ).then(data => {\n    if (data) {\n      globalActions.setTodos(data);\n      if (data.length === 0) {\n        globalActions.showSnackMessage(NO_TODOS_FOUND);\n      }\n    }\n  });\n}\n\nexport function searchTodo(searchString, globalActions) {\n  if (searchString) {\n    fetch(apiUrl +'/api/v1/todo/search/' + searchString, {\n      method: 'GET',\n      headers: {\n        'Authorization': localStorage.getItem(\"token\"),\n      }\n    }).then(response => {\n          checkForServerFailure(response, globalActions);\n          return response.json()\n        }\n    ).then(data => {\n      if (data) {\n        globalActions.setTodos(data);\n      }\n    });\n  } else {\n    findAllTodo(globalActions);\n  }\n}\n\nexport function deleteTodo(id, globalActions) {\n  fetch(apiUrl +'/api/v1/todo/' + id, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': localStorage.getItem(\"token\"),\n    }\n  }).then(response => {\n    checkForServerFailure(response, globalActions);\n\n    if (response.ok) {\n      findAllTodo(globalActions);\n      globalActions.showSnackMessage(DELETED_TODO);\n    }\n  })\n}\n\nexport function addTodo(todoString, globalActions) {\n  fetch(apiUrl +'/api/v1/todo', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify({contents: todoString})\n  }).then(response => {\n    checkForServerFailure(response, globalActions);\n\n    if (response.ok) {\n      findAllTodo(globalActions);\n      globalActions.showSnackMessage(ADDED_TODO);\n    }\n  })\n}\n\nexport function updateTodo(id, todoString, globalActions) {\n  fetch(apiUrl +'/api/v1/todo/' + id, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': localStorage.getItem(\"token\"),\n    },\n    body: JSON.stringify({contents: todoString})\n  }).then(response => {\n    checkForServerFailure(response, globalActions);\n    if (response.ok) {\n      findAllTodo(globalActions);\n      globalActions.showSnackMessage(UPDATED_TODO);\n    }\n  })\n}\n\nexport function login(username, password, props, globalActions) {\n  const data = new URLSearchParams();\n\n  data.append(\"username\", username);\n  data.append(\"password\", password);\n\n  fetch(apiUrl +'/api/v1/authenticate', {\n    method: 'POST',\n    body: data\n  }).then(response => {\n    checkForServerFailure(response, globalActions);\n    if (response.ok) {\n      response.headers.forEach(function (value, name) {\n        if (name === \"authorization\") {\n          localStorage.setItem(\"token\", value);\n          props.history.push(HOME);\n        }\n      });\n    } else if (response.status === 401) {\n      globalActions.showSnackMessage(INVALID_USERNAME_PASSWORD);\n    }\n  }).catch(err => {\n        console.log(err);\n      }\n  );\n}\n\nexport function signUp(username, password, confirmPassword, props, globalActions) {\n  if (!(username && password)) {\n    return globalActions.showSnackMessage(SIGN_UP_INVALID);\n  }\n  if (password !== confirmPassword) {\n    return globalActions.showSnackMessage(SIGN_UP_WRONG_PASSWORD);\n  }\n  fetch(apiUrl +'/api/v1/user', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({username: username, password: password})\n  }).then(response => {\n        checkForServerFailure(response, globalActions);\n        if (response.ok) {\n          login(username, password, props, globalActions);\n        } else if (response.status === 400) {\n          globalActions.showSnackMessage(SIGN_UP_USER_NAME_TAKEN);\n        }\n      }\n  ).catch(err =>\n      console.log(err)\n  );\n}\n\nfunction checkForServerFailure(response, globalActions) {\n  if (response.status === 500) {\n    return globalActions.showSnackMessage(GENERAL_FAILURE);\n  }\n}","import React from 'react';\nimport useGlobalHook from 'use-global-hook';\n\nconst initialState = {\n  todos: [],\n  showCustomModal: false,\n  customModalBody: \"\",\n  customModalTitle: \"\",\n  showSnackBar: false,\n  snarkBarMessage: \"\"\n};\n\nconst actions = {\n  setTodos: (store, todos) => {\n    store.setState({ todos: todos });\n  },\n  setCustomModalBody: (store, body) => {\n    store.setState({ customModalBody: body });\n  },\n  setCustomModalTitle: (store, title) => {\n    store.setState({ customModalTitle: title });\n  },\n  openDialog: (store) => {\n    store.setState({ showCustomModal: true });\n  },\n  closeDialog: (store) => {\n    store.setState({ showCustomModal: false });\n  },\n  closeSnackBar: (store) => {\n    store.setState({ showSnackBar: false });\n  },\n  showSnackMessage: (store, message) => {\n    store.setState({ snarkBarMessage: message, showSnackBar: true});\n  }\n};\n\nexport const useGlobal = useGlobalHook(React, initialState, actions);","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useStyles} from \"../../css/MaterialCss\";\nimport {login} from \"../../data/RestInteraction\";\nimport {useGlobal} from \"../../store/Store\";\nimport {Link} from \"react-router-dom\";\nimport {SIGNUP} from \"../../constants/RouterRoutes\";\n\nexport default function Login(props) {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline/>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign In\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(e) => login(username, password, props, globalActions)}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to={SIGNUP} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n\n      </Container>\n  );\n}","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {useGlobal} from \"../../store/Store\";\nimport {addTodo} from \"../../data/RestInteraction\";\n\nexport default function AddTodo() {\n  const [globalState, globalActions] = useGlobal();\n  const [content, setContent] = useState(\"\");\n\n  const handleAddTodo = () => {\n    addTodo(content, globalActions);\n    globalActions.closeDialog();\n  };\n\n  return (\n      <div>\n          <DialogContent>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"content\"\n                label=\"Content\"\n                type=\"text\"\n                fullWidth\n                multiline={true}\n                onChange={(e) => setContent(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={(e) => globalActions.closeDialog()} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={(e) => handleAddTodo()} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n      </div>\n  );\n}\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport LogoutIcon from '@material-ui/icons/Forward';\nimport {useGlobal} from \"../../store/Store\";\nimport {searchTodo} from \"../../data/RestInteraction\";\nimport {useStyles} from \"../../css/MaterialCss\";\nimport AddTodo from \"../todo/AddTodo\";\n\nexport default function SearchAppBar(props) {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n\n  const handleAddClick = () => {\n    globalActions.setCustomModalTitle(\"Add todo\");\n    globalActions.setCustomModalBody(<AddTodo/>);\n    globalActions.openDialog();\n  };\n\n  const handleLogOutClick = () => {\n    localStorage.removeItem(\"token\");\n    window.location = \"/#/\"\n  };\n\n  return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography className={classes.titleAppBar} variant=\"h6\" noWrap>\n              Material-UI Todo\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon/>\n              </div>\n              <InputBase\n                  placeholder=\"Search…\"\n                  classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                  }}\n                  inputProps={{'aria-label': 'Search'}}\n                  onChange={(e) => searchTodo(e.target.value, globalActions)}\n              />\n            </div>\n            <IconButton\n                aria-label=\"add a new todo\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={(e) => handleAddClick()}\n            >\n              <AddIcon/>\n            </IconButton>\n            <IconButton\n                aria-label=\"add a new todo\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                color=\"inherit\"\n                onClick={(e) => handleLogOutClick()}\n            >\n              <LogoutIcon/>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n  );\n}\n","import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {useGlobal} from \"../../store/Store\";\n\nexport default function CustomDialog(props) {\n  const [globalState, globalActions] = useGlobal();\n\n  return (\n      <div>\n        <Dialog open={globalState.showCustomModal} onClose={(e) => globalActions.closeDialog()}\n                aria-labelledby=\"form-dialog-title\" fullWidth={true}\n                maxWidth = {'md'}>\n          <DialogTitle id=\"form-dialog-title\">{globalState.customModalTitle}</DialogTitle>\n          {globalState.customModalBody}\n        </Dialog>\n      </div>\n  );\n}\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport {useGlobal} from \"../../store/Store\";\nimport {updateTodo} from \"../../data/RestInteraction\";\n\nexport default function EditTodoDialog(props) {\n  const [content, setContent] = useState(props.todo.content);\n  const [globalState, globalActions] = useGlobal();\n\n  const handleUpdateClick = () => {\n    updateTodo(props.todo.id, content, globalActions);\n    globalActions.closeDialog();\n  };\n\n  return (\n      <div>\n          <DialogContent>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"content\"\n                label=\"Content\"\n                type=\"text\"\n                fullWidth\n                value={content}\n                multiline={true}\n                onChange={(e) => setContent(e.target.value)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={(e) => globalActions.closeDialog()} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={(e) => handleUpdateClick()} color=\"primary\">\n              Update\n            </Button>\n          </DialogActions>\n      </div>\n  );\n}\n","import React, {useEffect} from 'react';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Container from \"@material-ui/core/Container\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchAppBar from \"../layout/AppBar\";\nimport {useGlobal} from \"../../store/Store\";\nimport {deleteTodo, findAllTodo} from \"../../data/RestInteraction\";\nimport {useStyles} from \"../../css/MaterialCss\";\nimport CustomDialog from \"../layout/CustomDialog\";\nimport EditTodo from \"./EditTodo\";\nimport moment from \"moment\";\n\nexport default function TodoHome() {\n  const [globalState, globalActions] = useGlobal();\n  const classes = useStyles();\n\n  useEffect(() => {\n    findAllTodo(globalActions);\n  }, []);\n\n  const handleEditClick = (todo) => {\n    globalActions.setCustomModalTitle(\"Update Todo\");\n    globalActions.setCustomModalBody(<EditTodo todo={todo}/>);\n    globalActions.openDialog();\n  };\n\n  const todoCards = globalState.todos.map(it => {\n    return (\n        <Card key={it.id} className={classes.card}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              {moment(new Date(it.createdDate)).format(\"MMMM Do YYYY, h:mm:ss\")}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {it.content}\n            </Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <IconButton onClick={(e) => handleEditClick(it)}>\n              <EditIcon color=\"primary\"/>\n            </IconButton>\n            <IconButton onClick={(e) => deleteTodo(it.id, globalActions)}>\n              <DeleteIcon color=\"error\"/>\n            </IconButton>\n          </CardActions>\n        </Card>\n    )\n  });\n\n  return (\n      <div>\n        <CustomDialog/>\n        <SearchAppBar/>\n        <Container component=\"main\" maxWidth=\"sm\">\n          {todoCards}\n        </Container>\n      </div>\n  );\n}","import React, {useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport PersonIcon from '@material-ui/icons/Person';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport {useStyles} from \"../../css/MaterialCss\";\nimport {signUp} from \"../../data/RestInteraction\";\nimport {useGlobal} from \"../../store/Store\";\nimport {Link} from \"react-router-dom\";\nimport {LOGIN} from \"../../constants/RouterRoutes\";\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [globalState, globalActions] = useGlobal();\n\n  return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline/>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PersonIcon/>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirmPassword\"\n                autoComplete=\"confirm-password\"\n                onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n            <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(e) => signUp(username, password, confirmPassword, props, globalActions)}\n            >\n              Create Account\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to={LOGIN} variant=\"body2\">\n                  {\"Already have an account? Log in\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n\n      </Container>\n  );\n}","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {useGlobal} from \"../../store/Store\";\nimport {useStyles} from \"../../css/MaterialCss\";\n\nexport default function CustomSnackbar() {\n  const classes = useStyles();\n  const [globalState, globalActions] = useGlobal();\n\n  return (\n      <div>\n        <Snackbar\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'center',\n            }}\n            open={globalState.showSnackBar}\n            autoHideDuration={3000}\n            onClose={ (e) => globalActions.closeSnackBar()}\n            ContentProps={{\n              'aria-describedby': 'message-id',\n            }}\n            message={<span id=\"message-id\">{globalState.snarkBarMessage}</span>}\n            action={[\n              <IconButton\n                  key=\"close\"\n                  aria-label=\"Close\"\n                  color=\"inherit\"\n                  className={classes.close}\n                  onClick={(e) =>globalActions.closeSnackBar()}\n              >\n                <CloseIcon />\n              </IconButton>,\n            ]}\n        />\n      </div>\n  );\n}","import React from 'react'\nimport Login from \"./user/Login\";\nimport TodoHome from \"./todo/TodoHome\";\nimport {HashRouter, Route} from \"react-router-dom\";\nimport SignUp from \"./user/SignUp\";\nimport CustomSnackbar from \"./layout/CustomSnackBar\";\nimport \"../css/App.css\";\nimport {HOME, LOGIN, SIGNUP} from \"../constants/RouterRoutes\";\n\nfunction App() {\n  return (\n      <div>\n        <HashRouter basename='/'>\n          <Route exact path={LOGIN} component={Login}/>\n          <Route exact path={SIGNUP} component={SignUp}/>\n          <Route exact path={HOME} component={TodoHome}/>\n        </HashRouter>\n        <CustomSnackbar/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './component/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}